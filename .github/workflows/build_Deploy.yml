name: Build and Deploy
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get short SHA
        id: sha
        run: echo "short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ steps.sha.outputs.short }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  deploy:
    needs: build-and-push
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'
      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'
      - name: Decode and set KUBECONFIG
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
          export KUBECONFIG=$(pwd)/kubeconfig
          kubectl config view
      - name: Get short SHA
        id: sha
        run: echo "short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Verify Helm chart
        run: |
          ls -R ./helm/task-manager
          if [ ! -f ./helm/task-manager/Chart.yaml ]; then
            echo "Error: Chart.yaml is missing"
            exit 1
          fi
          helm version
      - name: Deploy with Helm
        run: |
          cat > values-override.yaml << EOF
          image:
            repository: ghcr.io/${{ github.repository }}
            tag: ${{ steps.sha.outputs.short }}
          mongodb:
            uri: "${{ secrets.MONGODB_URI }}"
          ingress:
            hosts:
              - host: ${{ secrets.INGRESS_HOST || 'task-manager.local' }}
                paths:
                  - path: /
                    pathType: Prefix
          EOF
          cat values-override.yaml
          helm upgrade --install task-manager ./helm/task-manager \
            --namespace task-manager \
            --create-namespace \
            -f values-override.yaml \
            --wait --timeout 5m \
            --debug